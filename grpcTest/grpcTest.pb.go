// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpcTest.proto

package grpcTest

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestMessage_ItemType int32

const (
	TestMessage_TypeX TestMessage_ItemType = 0
	TestMessage_TypeY TestMessage_ItemType = 1
	TestMessage_TypeZ TestMessage_ItemType = 2
)

var TestMessage_ItemType_name = map[int32]string{
	0: "TypeX",
	1: "TypeY",
	2: "TypeZ",
}

var TestMessage_ItemType_value = map[string]int32{
	"TypeX": 0,
	"TypeY": 1,
	"TypeZ": 2,
}

func (x TestMessage_ItemType) String() string {
	return proto.EnumName(TestMessage_ItemType_name, int32(x))
}

func (TestMessage_ItemType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e4f37eff3d64f957, []int{0, 0}
}

type TestMessage struct {
	ClientName           string                 `protobuf:"bytes,1,opt,name=clientName,proto3" json:"clientName,omitempty"`
	ClientId             int32                  `protobuf:"varint,2,opt,name=clientId,proto3" json:"clientId,omitempty"`
	Description          string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Messageitems         []*TestMessage_MsgItem `protobuf:"bytes,4,rep,name=messageitems,proto3" json:"messageitems,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TestMessage) Reset()         { *m = TestMessage{} }
func (m *TestMessage) String() string { return proto.CompactTextString(m) }
func (*TestMessage) ProtoMessage()    {}
func (*TestMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4f37eff3d64f957, []int{0}
}

func (m *TestMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMessage.Unmarshal(m, b)
}
func (m *TestMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMessage.Marshal(b, m, deterministic)
}
func (m *TestMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMessage.Merge(m, src)
}
func (m *TestMessage) XXX_Size() int {
	return xxx_messageInfo_TestMessage.Size(m)
}
func (m *TestMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TestMessage proto.InternalMessageInfo

func (m *TestMessage) GetClientName() string {
	if m != nil {
		return m.ClientName
	}
	return ""
}

func (m *TestMessage) GetClientId() int32 {
	if m != nil {
		return m.ClientId
	}
	return 0
}

func (m *TestMessage) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *TestMessage) GetMessageitems() []*TestMessage_MsgItem {
	if m != nil {
		return m.Messageitems
	}
	return nil
}

type TestMessage_MsgItem struct {
	Id                   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ItemName             string               `protobuf:"bytes,2,opt,name=itemName,proto3" json:"itemName,omitempty"`
	ItemValue            int32                `protobuf:"varint,3,opt,name=itemValue,proto3" json:"itemValue,omitempty"`
	ItemType             TestMessage_ItemType `protobuf:"varint,4,opt,name=itemType,proto3,enum=grpcTest.TestMessage_ItemType" json:"itemType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestMessage_MsgItem) Reset()         { *m = TestMessage_MsgItem{} }
func (m *TestMessage_MsgItem) String() string { return proto.CompactTextString(m) }
func (*TestMessage_MsgItem) ProtoMessage()    {}
func (*TestMessage_MsgItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4f37eff3d64f957, []int{0, 0}
}

func (m *TestMessage_MsgItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestMessage_MsgItem.Unmarshal(m, b)
}
func (m *TestMessage_MsgItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestMessage_MsgItem.Marshal(b, m, deterministic)
}
func (m *TestMessage_MsgItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestMessage_MsgItem.Merge(m, src)
}
func (m *TestMessage_MsgItem) XXX_Size() int {
	return xxx_messageInfo_TestMessage_MsgItem.Size(m)
}
func (m *TestMessage_MsgItem) XXX_DiscardUnknown() {
	xxx_messageInfo_TestMessage_MsgItem.DiscardUnknown(m)
}

var xxx_messageInfo_TestMessage_MsgItem proto.InternalMessageInfo

func (m *TestMessage_MsgItem) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TestMessage_MsgItem) GetItemName() string {
	if m != nil {
		return m.ItemName
	}
	return ""
}

func (m *TestMessage_MsgItem) GetItemValue() int32 {
	if m != nil {
		return m.ItemValue
	}
	return 0
}

func (m *TestMessage_MsgItem) GetItemType() TestMessage_ItemType {
	if m != nil {
		return m.ItemType
	}
	return TestMessage_TypeX
}

type Reply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4f37eff3d64f957, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("grpcTest.TestMessage_ItemType", TestMessage_ItemType_name, TestMessage_ItemType_value)
	proto.RegisterType((*TestMessage)(nil), "grpcTest.TestMessage")
	proto.RegisterType((*TestMessage_MsgItem)(nil), "grpcTest.TestMessage.MsgItem")
	proto.RegisterType((*Reply)(nil), "grpcTest.Reply")
}

func init() { proto.RegisterFile("grpcTest.proto", fileDescriptor_e4f37eff3d64f957) }

var fileDescriptor_e4f37eff3d64f957 = []byte{
	// 293 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x4f, 0x6b, 0xb3, 0x40,
	0x10, 0xc6, 0xdf, 0xdd, 0xc4, 0x37, 0x71, 0x2c, 0x56, 0x16, 0x0a, 0x22, 0x6d, 0x10, 0x4f, 0x42,
	0xc1, 0x83, 0xa5, 0x97, 0xde, 0x0a, 0xbd, 0x78, 0x48, 0x0f, 0x9b, 0x50, 0xda, 0xde, 0xac, 0x0e,
	0xb2, 0xe0, 0x3f, 0xdc, 0x6d, 0x21, 0x9f, 0xa2, 0x9f, 0xb4, 0xdf, 0xa1, 0xb8, 0x46, 0x63, 0x21,
	0xa7, 0x7d, 0x9e, 0x67, 0x67, 0x76, 0x7e, 0xec, 0x80, 0x5d, 0x74, 0x6d, 0xb6, 0x47, 0xa9, 0xa2,
	0xb6, 0x6b, 0x54, 0xc3, 0xd6, 0xa3, 0x0f, 0x7e, 0x28, 0x58, 0xbd, 0xd8, 0xa2, 0x94, 0x69, 0x81,
	0x6c, 0x03, 0x90, 0x95, 0x02, 0x6b, 0xf5, 0x9c, 0x56, 0xe8, 0x12, 0x9f, 0x84, 0x26, 0x9f, 0x25,
	0xcc, 0x83, 0xf5, 0xe0, 0x92, 0xdc, 0xa5, 0x3e, 0x09, 0x0d, 0x3e, 0x79, 0xe6, 0x83, 0x95, 0xa3,
	0xcc, 0x3a, 0xd1, 0x2a, 0xd1, 0xd4, 0xee, 0x42, 0x37, 0xcf, 0x23, 0xf6, 0x08, 0x17, 0xd5, 0x30,
	0x48, 0x28, 0xac, 0xa4, 0xbb, 0xf4, 0x17, 0xa1, 0x15, 0xdf, 0x44, 0x13, 0xde, 0x0c, 0x25, 0xda,
	0xca, 0x22, 0x51, 0x58, 0xf1, 0x3f, 0x2d, 0xde, 0x37, 0x81, 0xd5, 0xf1, 0x86, 0xd9, 0x40, 0x45,
	0xae, 0x21, 0x0d, 0x4e, 0x45, 0xde, 0xc3, 0xf5, 0x45, 0x1a, 0x9d, 0xea, 0xe9, 0x93, 0x67, 0xd7,
	0x60, 0xf6, 0xfa, 0x25, 0x2d, 0x3f, 0x51, 0xa3, 0x19, 0xfc, 0x14, 0xb0, 0x87, 0xa1, 0x73, 0x7f,
	0x68, 0xd1, 0x5d, 0xfa, 0x24, 0xb4, 0xe3, 0xcd, 0x79, 0xa8, 0xe4, 0x58, 0xc5, 0xa7, 0xfa, 0xe0,
	0x16, 0xd6, 0x63, 0xca, 0x4c, 0x30, 0xfa, 0xf3, 0xd5, 0xf9, 0x37, 0xca, 0x37, 0x87, 0x8c, 0xf2,
	0xdd, 0xa1, 0xc1, 0x0a, 0x0c, 0x8e, 0x6d, 0x79, 0x88, 0x9f, 0x86, 0x7f, 0xdf, 0x61, 0xf7, 0x25,
	0x32, 0x64, 0xf7, 0x60, 0xed, 0xb0, 0xce, 0xc7, 0x35, 0x5c, 0x9d, 0x9d, 0xee, 0x5d, 0x9e, 0x62,
	0xfd, 0xca, 0xc7, 0x7f, 0xbd, 0xcf, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0f, 0xde, 0xc6,
	0xe3, 0xe1, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestServiceClient is the client API for TestService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestServiceClient interface {
	SendMessage(ctx context.Context, in *TestMessage, opts ...grpc.CallOption) (*Reply, error)
}

type testServiceClient struct {
	cc *grpc.ClientConn
}

func NewTestServiceClient(cc *grpc.ClientConn) TestServiceClient {
	return &testServiceClient{cc}
}

func (c *testServiceClient) SendMessage(ctx context.Context, in *TestMessage, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/grpcTest.TestService/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServiceServer is the server API for TestService service.
type TestServiceServer interface {
	SendMessage(context.Context, *TestMessage) (*Reply, error)
}

// UnimplementedTestServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTestServiceServer struct {
}

func (*UnimplementedTestServiceServer) SendMessage(ctx context.Context, req *TestMessage) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterTestServiceServer(s *grpc.Server, srv TestServiceServer) {
	s.RegisterService(&_TestService_serviceDesc, srv)
}

func _TestService_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServiceServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcTest.TestService/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServiceServer).SendMessage(ctx, req.(*TestMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _TestService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcTest.TestService",
	HandlerType: (*TestServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _TestService_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpcTest.proto",
}
